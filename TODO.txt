TODO
- create iterator in register to easily access bitfields
- add CMSIS-DAP support (and others) through pyOCD transport
- add espressif targets support through esptool transport https://github.com/espressif/esptool
- use pyverilator to provide register-based interactive interface for verification https://github.com/csail-csg/pyverilator
- add SPIRIT IP-XACT parser through ipyxact https://github.com/olofk/ipyxact
- port to micropython ?
- consider using bunch ( https://pypi.org/project/bunch/ ) instead of namedtuple as parser output
    - maybe useful to enable autocompletion
        class MyBunch(Bunch):
            def __dir__(self):
                # s = set(super.__dir__(self))
                s = set(super().__dir__())
                for key in self:
                    s.add(key)
                return s
